#define MAX_MONSTERATTACKS 30
int MonsterAttacks[MAX_MONSTERATTACKS][8] = 
{
	{ "MagmaFiend", "\cgMagma Ball", "Lunge", "\ciFire Breath", "X" },
	{ "Cacomental", "\cgNormal", "\cgSeeking", "\cgComet", "X" },
	{ "HellKnight~", "\cdNormal", "\cdBurst Ball", "\cdComet", "X" },
	{ "PyroDemon", "\ciNormal", "\ciComet", "\ciFloor Hugger", "X" },
	{ "CyberNoble", "Shotgun", "\cdBurst Ball", "\cdLarge Ball", "Rocket", "X" },
	{ "HellDuke", "\cdNormal", "\cdGiant Ball", "\cdBurst Comet", "\cdFloor Hugger", "X" },
	{ "BaronOfHell~", "\cdNormal", "\cdGiant Balls", "\cdComet", "X" },
	{ "BruiserDemon", "\ciNormal", "\ciGiant Balls", "\ciComet", "X" },
	{ "Cybruiser", "\chRailgun", "Rockets", "Homing Rockets", "\cgBFG15K", "X" },
	{ "Demolisher", "Normal", "\cdBFG15K", "\cdBFG9K", "X" },
	{ "DarkDemolisher", "Normal", "\cdBFG9K", "\cdBFG10K", "X" },
	{ "CerebralSentient", "Normal", "\cgBFG9K", "\cgBFG10K", "\cgDemon Tech BFG10K", "X" },
	{ "DarkCyberdemon", "Rockets", "Homing Rockets", "\cdFloor Stomp", "\cdRailgun", "\cdBFG15K", "X" },
	{ "Cardinal", "Rockets", "Homing Rockets", "\cgRailgun", "\cgBFG10K", "\cgDemon Tech BFG10K", "X" },
	
	{ "MONSTERATTACKS" }
};

function int FindMonsterAttackList(str actorname)
{
	int i = 0;
	while (StrCmp(MonsterAttacks[i][0], "MONSTERATTACKS"))
	{
		if (!StrCmp(MonsterAttacks[i][0], actorname))
			return i;
		i++;
	}
	return -1;
}

script mop_attackswitching (int attacklist)
{
	int attack = 1;
	GiveInventory("Attack1", 1);
	int prevbuttonstate = !!(GetPlayerInput(-1, INPUT_BUTTONS) & BT_ALTATTACK);
	while (GetActorProperty(0, APROP_HEALTH) > 0 && CheckInventory("IsPossessed"))
	{
		int buttonstate = !!(GetPlayerInput(-1, INPUT_BUTTONS) & BT_ALTATTACK);
		if (prevbuttonstate == 0 && buttonstate == 1)
		{
			TakeInventory(StrParam(s:"Attack", d:attack), 1);
			attack++;
			if (!StrCmp(MonsterAttacks[attacklist][attack], "X"))
				attack = 1;
			GiveInventory(StrParam(s:"Attack", d:attack), 1);
			print(s:MonsterAttacks[attacklist][attack]);
		}
		prevbuttonstate = buttonstate;
		Delay(1);
	}
	TakeInventory(StrParam(d:"Attack", s:attack), 1);
}