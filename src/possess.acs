int LastDeathPosition[MAX_PLAYERS][4];

#define POSSESSED_ADDITIONAL_HP 10000

script mop_possess (void)
{
	int player = 1000 + PlayerNumber();
	
	// Select the monster we are pointing at.
	SetActivatorToTarget(0);
	if (PlayerNumber() != -1)
		terminate; // Cannot possess a player.
		
	// Temporarily change the monster's tid.
	Thing_ChangeTid(0, TEMPTID);

	// Store monster properties.
	int type = IdentifyMonsterType(TEMPTID);
	int x = GetActorX(TEMPTID);
	int y = GetActorY(TEMPTID);
	int z = GetActorZ(TEMPTID);
	int angle = GetActorAngle(TEMPTID);
	int health = GetActorProperty(TEMPTID, APROP_HEALTH);
	int spawnhealth = GetActorProperty(TEMPTID, APROP_SPAWNHEALTH);
	int vx = GetActorVelX(TEMPTID);
	int vy = GetActorVelY(TEMPTID);
	int vz = GetActorVelZ(TEMPTID);
	
	// Dead and unknown actors can't be possessed.
	if (health <= 0 || type == -1)
	{
		Thing_ChangeTid(TEMPTID, 0);
		terminate;
	}
	
	// Remove the monster and move puppetmaster to the exact position of the monster.
	SetActivator(player);
	Thing_Remove(TEMPTID);
	SetActorPosition(0, x, y, z, false);
	SetActorAngle(0, angle);

	// Morph!
	MorphActor(0, StrParam(s:"Possessed", s:MonsterTypes[type][MONSTER_ACTORNAME]), "", INT_MAX, 0, "NoFlash", "NoFlash");
	PossessedCount++;

	// Set properties.
	SetPlayerProperty(0, true, PROP_NOTARGET);
	SetPlayerProperty(0, MonsterTypes[type][MONSTER_FLAGS] & MONSTF_FLYING, PROP_FLY);
	SetActorProperty(0, APROP_HEALTH, health + POSSESSED_ADDITIONAL_HP);
	SetActorVelocity(0, vx, vy, vz, false, true);

	// Show HUD.
	ACS_ExecuteAlways(mop_possessed_hud, 0, PlayerNumber(), spawnhealth);

	// Fix firing instantly after possessing.
	SetPlayerProperty(0, true, PROP_TOTALLYFROZEN);
	Delay(7);
	SetPlayerProperty(0, false, PROP_TOTALLYFROZEN);

	// Wait until the monster dies or puppetmaster leaves.
	// And record the hp difference in case the monster died.
	int hp1 = GetActorProperty(0, APROP_HEALTH);
	int hp2 = GetActorProperty(0, APROP_HEALTH);
	while (hp2 > POSSESSED_ADDITIONAL_HP && !(GetPlayerInput(0, INPUT_BUTTONS) & BT_ALTATTACK))
	{
		hp1 = hp2;
		hp2 = GetActorProperty(0, APROP_HEALTH);
		Delay(1);
	}
	
	// Record last death's point to respawn there.
	LastDeathPosition[PlayerNumber()][0] = GetActorX(0);
	LastDeathPosition[PlayerNumber()][1] = GetActorY(0);
	LastDeathPosition[PlayerNumber()][2] = GetActorZ(0);
	LastDeathPosition[PlayerNumber()][3] = GetActorAngle(0);
	
	// The position of the monster.
	x = GetActorX(0);
	y = GetActorY(0);
	z = GetActorZ(0);
	vx = GetActorVelX(0);
	vy = GetActorVelY(0);
	vz = GetActorVelZ(0);
	angle = GetActorAngle(0);
	
	// Unmorph.
	UnmorphActor(0, true);
	PossessedCount--;
	SetActorProperty(0, APROP_HEALTH, 1);
	
	// Spawn the replacement actor.
	SpawnForced(MonsterTypes[type][MONSTER_ACTORNAME], x, y, z, TEMPTID, angle>>256);
	SetActorVelocity(TEMPTID, vx, vy, vz, false, true);
	
	// Transfer health.
	SetActorProperty(TEMPTID, APROP_HEALTH, hp1 - POSSESSED_ADDITIONAL_HP);
	Thing_Damage(TEMPTID, hp1 - hp2, 0);
	
	Thing_ChangeTid(TEMPTID, 0);
}

// Puppeter custom hud drawing.
script mop_possessed_hud(int player, int spawnhp) CLIENTSIDE
{
	if (ConsolePlayerNumber() != player)
		terminate;

	while (GetActorProperty(0, APROP_HEALTH) > POSSESSED_ADDITIONAL_HP)
	{
		// Ripped from MOP-X.
		SetHUDSize(400,300,0);
		SetFont("SMALLFONT");
		HUDMessage(
			i:GetActorProperty(0,APROP_HEALTH) - POSSESSED_ADDITIONAL_HP,
			s:"/",
			i:spawnhp;
			HUDMSG_PLAIN, 0, CR_RED, 50.0, 280.0, 0.03
		);
		// End of MOP-X code.
		
		Delay(1);
	}
}

// Move the puppetmaster to the place of his last death.
script mop_respawn_puppetmaster RESPAWN
{
	if (!ThingCountName("PuppetMaster", 1000 + PlayerNumber()))
		terminate;
		
	int x = LastDeathPosition[PlayerNumber()][0];
	int y = LastDeathPosition[PlayerNumber()][1];
	int z = LastDeathPosition[PlayerNumber()][2];

	SetActorPosition(0, x, y, z, false);
	SetActorAngle(0, LastDeathPosition[PlayerNumber()][3]);
}
